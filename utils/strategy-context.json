{
  "document_title": "Enabling Interactive Process Improvement for Strategy Evaluation",
  "purpose": "Provide a structured, machine-usable representation of strategy metadata to enable real-time interaction, exploration, and analysis of the Primary_Decision_Strategy and related nodes. It is designed to allow agents (e.g., ChatGPT) to respond to governance, performance, optimization, and simulation questions.",
  "strategy_overview": {
    "strategy_name": "Primary_Decision_Strategy",
    "strategy_purpose": "Evaluate customer eligibility, applicability, suitability, and offer prioritization for targeted offers.",
    "primary_data_sources": ["Customer Metadata", "Decision Results", "Interaction History", "Prediction Engine"],
    "key_external_integrations": ["Publishing System", "Prediction Engine"]
  },
  "data_models": {
    "Customer_Metadata": {
      "source": "Enterprise-CDH-Data-Customer",
      "fields": {
        "Segment": "Customer value tier",
        "Region": "Customer's geographic region",
        "Age": "Customer age",
        "CreditScore": "Bureau or internal credit score"
      }
    },
    "Decision_Results": {
      "source": "px_decision_results",
      "fields": {
        "pyModelPropensity": "Propensity score generated by model",
        "pyOutcome": "Final decision outcome",
        "pyNodeID": "Node that evaluated the logic",
        "EligibilityConditions": "Conditions used for eligibility decisioning"
      }
    },
    "Interaction_History": {
      "source": "pr_data_ih_fact",
      "fields": {
        "Accepted": "Whether the customer accepted the offer",
        "Channel": "Channel where the offer was made",
        "ResponseTime": "Time taken to respond",
        "Region": "Geographic region metadata from the interaction"
      }
    }
  },
  "dashboard_kpis": {
    "title": "Business Rules Simplification Dashboard",
    "sections": [
      {
        "category": "Governance",
        "metrics": [
          "Number of rules with overlapping conditions (e.g., CreditScore, Region)",
          "Number of rules linked to external systems (e.g., Prediction Engine)",
          "Node-level RACI assignment coverage"
        ]
      },
      {
        "category": "Performance & Resiliency",
        "metrics": [
          "Execution time per node (ms)",
          "Number of runtime exceptions by node",
          "Caching effectiveness ratio (cache hits vs total runs)"
        ]
      },
      {
        "category": "Offer Optimization",
        "metrics": [
          "Top 5 paths to offer selection by volume",
          "Offer acceptance rate by segment/region",
          "Propensity threshold variance across nodes"
        ]
      },
      {
        "category": "Compliance & Transparency",
        "metrics": [
          "Rules missing documentation or data lineage",
          "Static vs dynamic rule ratio",
          "Simulation coverage (e.g., tested attribute permutations)"
        ]
      }
    ]
  },
  "execution_and_simulation": {
    "execution_methods": [
      "pzExecuteLegacyComponent",
      "pzCreatePredictionMarkers",
      "pega_decisionengine_publishing.publishStrategyResults"
    ],
    "simulation_attributes": ["Segment", "Region", "CreditScore", "Propensity"],
    "caching_approach": "SSA Caching via pzGetGOS",
    "randomization_elements": ["pzGetNextRandomDouble"],
    "runtime_exceptions": ["ComponentExecutionException"],
    "simulation_capabilities": "Modify Segment, Region (Region East, Region Central, Region Midwest, Region West, Region North), CreditScore, Propensity attributes to simulate node paths dynamically"
  },
  "key_relationships": [
    {
      "type": "Eligibility Checks",
      "path": "Eligibility_Check_Primary → Eligibility_Extension"
    },
    {
      "type": "Applicability Checks",
      "path": "Applicability Check → Applicability_Check_Primary"
    },
    {
      "type": "Suitability Checks",
      "path": "Suitability Check → Suitability_Check_Primary"
    },
    {
      "type": "Offer Evaluation",
      "path": "Offer Collector → Best Result"
    },
    {
      "type": "Final Offer Selection",
      "path": "Best Result → Results"
    }
  ],
  "node_details": [
    {
      "node_name": "External Input",
      "node_type": "Input",
      "condition_rule": "None",
      "data_sources": ["Customer Input"],
      "external_systems": "None",
      "runtime_method": "N/A",
      "performance_optimization": "N/A",
      "error_handling": "N/A"
    },
    {
      "node_name": "Applicability Check",
      "node_type": "Applicability Check",
      "condition_rule": "Customer.Region = 'Region Central'",
      "data_sources": ["Customer Metadata"],
      "external_systems": "None",
      "runtime_method": "pzExecuteLegacyComponent",
      "performance_optimization": "SSA Caching via pzGetGOS",
      "error_handling": "ComponentExecutionException"
    },
    {
      "node_name": "Eligibility_Check_Primary",
      "node_type": "Eligibility Check",
      "condition_rule": "Customer.Eligible = true",
      "data_sources": ["Customer Metadata", "Decision Results"],
      "external_systems": "None",
      "runtime_method": "pzExecuteLegacyComponent",
      "performance_optimization": "SSA Caching via pzGetGOS",
      "error_handling": "ComponentExecutionException"
    },
    {
      "node_name": "Applicability_Check_Primary",
      "node_type": "Applicability Check",
      "condition_rule": "Customer.Group = 'Premium'",
      "data_sources": ["Customer Metadata", "Decision Results"],
      "external_systems": "None",
      "runtime_method": "pzCreatePredictionMarkers",
      "performance_optimization": "SSA Caching via pzGetGOS",
      "error_handling": "ComponentExecutionException"
    },
    {
      "node_name": "Suitability Check",
      "node_type": "Suitability",
      "condition_rule": "Customer.Age > 25 and Account.Balance > 1000",
      "data_sources": ["Customer Metadata", "Decision Results"],
      "external_systems": "None",
      "runtime_method": "pzCreatePredictionMarkers",
      "performance_optimization": "SSA Caching via pzGetGOS",
      "error_handling": "ComponentExecutionException"
    },
    {
      "node_name": "Suitability_Check_Primary",
      "node_type": "Suitability Extension",
      "condition_rule": "CreditScore > 60",
      "data_sources": ["Customer Metadata", "Decision Results"],
      "external_systems": "None",
      "runtime_method": "pzCreatePredictionMarkers",
      "performance_optimization": "SSA Caching via pzGetGOS",
      "error_handling": "ComponentExecutionException"
    },
    {
      "node_name": "Offer Collector",
      "node_type": "Offer Evaluation",
      "condition_rule": "Segment = 'HighValue' and Propensity > 0.7",
      "data_sources": ["Customer Metadata", "Decision Results", "Interaction History"],
      "external_systems": "Prediction Engine",
      "runtime_method": "pzCreatePredictionMarkers",
      "performance_optimization": "SSA Caching via pzGetGOS",
      "error_handling": "ComponentExecutionException"
    },
    {
      "node_name": "Eligibility_Extension",
      "node_type": "Eligibility Reconfirmation",
      "condition_rule": "Region = 'Region Central'",
      "data_sources": ["Customer Metadata", "Decision Results"],
      "external_systems": "None",
      "runtime_method": "pzCreatePredictionMarkers",
      "performance_optimization": "SSA Caching via pzGetGOS",
      "error_handling": "ComponentExecutionException"
    },
    {
      "node_name": "Best Result",
      "node_type": "Final Offer Selection",
      "condition_rule": "PrioritizationScore > 90 and Propensity > 0.8",
      "data_sources": ["Customer Metadata", "Decision Results"],
      "external_systems": "None",
      "runtime_method": "pzCreatePredictionMarkers",
      "performance_optimization": "SSA Caching via pzGetGOS",
      "error_handling": "ComponentExecutionException"
    },
    {
      "node_name": "Results",
      "node_type": "Output",
      "condition_rule": "None",
      "data_sources": ["Finalized Offer"],
      "external_systems": "Publishing System",
      "runtime_method": "pega_decisionengine_publishing.publishStrategyResults",
      "performance_optimization": "SSA Caching via pzGetGOS",
      "error_handling": "N/A"
    }
  ],
  "question_templates": {
    "transparency_and_governance": [
      "Which nodes depend on external systems like the Prediction Engine or Interaction History?",
      "Are there overlapping or conflicting eligibility checks?",
      "How does the logic differ between nodes using Propensity thresholds?"
    ],
    "performance_and_resiliency": [
      "Which nodes have the longest average execution times?",
      "Which nodes commonly raise ComponentExecutionException?",
      "Are caching mechanisms being used consistently?"
    ],
    "offer_optimization": [
      "Which attributes most influence Platinum vs. Gold offers?",
      "Where are customers most frequently filtered out?",
      "What-if we lower CreditScore threshold by 10 points?"
    ],
    "analytics_and_reporting": [
      "What metrics should we track per node?",
      "Are current thresholds dynamic or static?",
      "Where could machine learning be used instead of fixed logic?"
    ]
  }
}
